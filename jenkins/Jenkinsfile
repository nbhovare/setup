// Jenkins File for Pipeline

// Todos ~ Delete after Implemented Successfully
// 1. Makes Branch choices dynamically updated : fetch from github all branch name and let executor choose which branch to deploy
// 2. Add Service folder functionality
// 3. Try out more parameters
// 4. Fetch all git repo select repo then select branch of choice to deploy.......
// 6. Implement Proper Concatenation in Jenkinsfile & include single variable instead of mentioning concatenation each time
// 7. Deploy VM to run this pipeline
// 8. Implement on Git Push & Pull requests
// 9. Add Result output of pipeline to echo in or after CI-Ending ~ Last Step

pipeline {
    agent any

    /* tools {
        Tools here
    }
    */

    environment {
        GIT_URL = "https://github.com/nbhovare/setup.git"
        DOCKER_REPO = "nihalblog25"
    }

    // Required Params
    parameters {
        string ( name: "NAME", description: "Your Name for Logging: " )

        // Make it more interactive by applying todos.1
        string ( name: "BRANCH", description: "Enter Branch to deploy from: " )
        //choice ( name: "BRANCH", choices: ["feat/*", "Main"], description: "Select Branch to deploy from" )
        // & maybe also include todos.4 
        //choice ( name: "BRANCH", choices: ["feat/*", "Main"], description: "Select Branch to deploy from" )

        string ( name: "DOCKER_IMAGE_NAME", description: "Docker Image Name/tag, Adhere to Company Standard for Naming conventions" )
    }
    stages {
        stage ("CI-Starting") {
            steps {
                echo "CI-Starting"
                echo "Executed BY: ${params.NAME}"
            }
        }

        stage ("Git Checkout") {
            steps {
                echo "Git Checkout"
                git branch: "${params.BRANCH}", url: "${GIT_URL}"
            }
        }

        stage ("List Dir") {
            steps {
                // List all dir in current git workspace
                sh "ls -d */ | cut -f1 -d '/'"
            }
        }

        stage ("Docker Build, Tag & Push Docker Image to DockerHub") {

            steps {
                // This step should not normally be used in your script. Consult the inline help for details.

                //withCredentials([string(credentialsId: 'docker_access_token', variable: 'jenkins-cicd-accesstoken')]) {
                // Use Docker with Token instead of hardcoding password token or username & Password in Jenkinsfile
                withDockerRegistry(url: '', credentialsId: 'jenkins-token') {
                    echo "Note: Always put Dockerfile in root directory of project folders"
                    
                    echo "Building Docker Image with tags - ${DOCKER_REPO}/${params.DOCKER_IMAGE_NAME}:v$BUILD_NUMBER"
                    
                    sh '''
                        "docker build -t ${DOCKER_REPO}/${params.DOCKER_IMAGE_NAME}:v$BUILD_NUMBER ."                                
                        sh "docker push ${DOCKER_REPO}/${params.DOCKER_IMAGE_NAME}:v$BUILD_NUMBER"
                    '''
                }
            }
        }
        
        stage ("CI-Ending") {
            steps {
                echo "CI-Ending"
            }
        }
    }
}
